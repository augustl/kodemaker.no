---
- hosts: new-servers
  vars:
  - ubuntu_release: precise
  - deploy_password: '$6$AC77dCF7!$e7KwPl1JJUKCFLBMKrgAVd.rjPqfElcRMqebjVHG48rFz35soLSPtNxv4tnTsb0ye6fAIwZtw4h6waTznmOfK0'
    # crypted password, generated on a Linux box using: echo 'import crypt,getpass; print crypt.crypt(getpass.getpass(), "$6$AC77dCF7!")' | python -

  tasks:
  - name: Update APT package cache
    apt: update_cache=yes cache_valid_time=3600

  - name: Run apt-get upgrade
    apt: upgrade=dist

  - name: Install fail2ban
    apt: pkg=fail2ban state=present

  - name: Add deployment user
    user: name=deploy state=present password=$deploy_password shell=/bin/bash

  - name: Setup authorized_keys for users who may act as deploy user
    authorized_key: user=deploy key="{{ item }}"
    with_file:
      - keys/magnars.pub

  - name: Remove sudo group rights
    action: lineinfile dest=/etc/sudoers regexp="^%sudo" state=absent

  - name: Add deploy user to sudoers
    action: lineinfile dest=/etc/sudoers regexp="deploy ALL" line="deploy ALL=(ALL) ALL" state=present

  - name: Disallow root SSH access
    action: lineinfile dest=/etc/ssh/sshd_config regexp="^PermitRootLogin" line="PermitRootLogin no" state=present
    notify: Restart ssh

  - name: Disallow password authentication
    action: lineinfile dest=/etc/ssh/sshd_config regexp="^PasswordAuthentication" line="PasswordAuthentication no" state=present
    notify: Restart ssh

  - name: Install unattended-upgrades
    action: apt pkg=unattended-upgrades state=present

  - name: Adjust APT update intervals
    action: copy src=config/apt_periodic dest=/etc/apt/apt.conf.d/10periodic

  - name: Make sure unattended-upgrades only installs from $ubuntu_release-security
    action: lineinfile dest=/etc/apt/apt.conf.d/50unattended-upgrades regexp="$ubuntu_release-updates" state=absent

  handlers:
  - name: Restart ssh
    action: service name=ssh state=restarted
