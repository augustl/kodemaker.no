# non-www to www redirect -- duplicate content is BAD:
# https://github.com/h5bp/html5-boilerplate/blob/5370479476dceae7cc3ea105946536d6bc0ee468/.htaccess#L362
# Choose between www and non-www, listen on the *wrong* one and redirect to
# the right one -- http://wiki.nginx.org/Pitfalls#Server_Name
server {
  # don't forget to tell on which port this server listens
  listen 8001;

  # listen on the non-www host
  server_name kodemaker.no;

  # and redirect to the non-www host (declared below)
  return 301 $scheme://{{ km_domain }}$request_uri;
}

server {
  listen 8001 default deferred; # Re: deferred: The option is beneficial on all configurations, not to the level you'd ever likely notice except under an extreme load of HTTP traffic, but it's theoretically the "right" way to do it. It's an option because not all Unix (not even all Linux) flavours have that capability, and thus for portability it can be configured not to be inclided. http://unix.stackexchange.com/questions/94104/real-world-use-of-tcp-defer-accept

  # The host name to respond to
  server_name {{ km_domain }};

  index index.html;
  root /var/www/kodemaker.no;

  charset utf-8;

  location ^~ /cv/ {
    proxy_pass       http://old.kodemaker.no/cv/;
  }

  # far-future expires headers
  location ~* ^.+\.(css|js|jpg|jpeg|gif|png|ico|gz|svg|svgz|ttf|otf|woff|eot|mp4|ogg|ogv|webm)$ {
    expires max;
    access_log off; # and no logging of static content access
  }

  # Prevent clients from accessing hidden files (starting with a dot)
  # This is particularly important if you store .htpasswd files in the site hierarchy
  location ~* (?:^|/)\. {
    deny all;
  }

  # Don't include port when redirecting
  port_in_redirect off;

  # Force the latest IE version
  # Use ChromeFrame if it's installed for a better experience for the poor IE folk
  add_header "X-UA-Compatible" "IE=Edge";

  # Old URLs
  location /mennesker {
    rewrite  ^/mennesker/alf-kristian-st√∏yle/?$ /alf-kristian/ permanent;
    rewrite  ^/mennesker/alfeinar/?$ /alf-einar/ permanent;
    rewrite  ^/mennesker/christian-johansen/?$ /christian/ permanent;
    rewrite  ^/mennesker/steintore/?$ /stein-tore/ permanent;
    rewrite  ^/mennesker/stenmorten/?$ /sten-morten/ permanent;

    if ($request_uri ~* ^/mennesker/.+) {
      rewrite ^/mennesker/(.+)$ /$1 permanent;
    }
  }

  # When all else fails
  error_page 404 /404.html;
}
